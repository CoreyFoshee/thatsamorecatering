<footer class="bg-dark text-white py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <div class="grid md:grid-cols-4 gap-8">
            <div>
                <a href="/" class="inline-block hover:opacity-90 transition-opacity duration-300 mb-4">
                    <img src="/Logo/TA_LOGO_Final_white.png" alt="That's Amore Logo" class="h-16 w-auto">
                </a>
                <p class="text-gray-300">Serving authentic pizza in Metairie since 2012</p>
            </div>
            <div>
                <h4 class="text-lg font-semibold mb-4">Quick Links</h4>
                <ul class="space-y-2">
                    <li><a href="https://thasamorepizzaonline.com" class="text-gray-300 hover:text-accent transition-colors duration-300">Main Website</a></li>
                    <li><a href="https://thasamorepizzaonline.com/menu" class="text-gray-300 hover:text-accent transition-colors duration-300">Menu</a></li>
                    <li><a href="https://thasamorepizzaonline.com/catering" class="text-gray-300 hover:text-accent transition-colors duration-300">Catering</a></li>
                    <li><a href="https://thasamorepizzaonline.com/franchise" class="text-gray-300 hover:text-accent transition-colors duration-300">Franchise</a></li>
                    <li><a href="https://thasamorepizzaonline.com/contact" class="text-gray-300 hover:text-accent transition-colors duration-300">Contact</a></li>
                </ul>
            </div>
            <div>
                <h4 class="text-lg font-semibold mb-4">Business Hours</h4>
                
                <!-- Today's Hours Section -->
                <div class="mb-4 p-3 bg-primary/20 rounded-lg border border-primary/30">
                    <h5 class="text-sm font-semibold text-accent mb-2">Today's Hours</h5>
                    <div id="today-hours" class="text-sm text-white font-medium">
                        <!-- JavaScript will populate this -->
                    </div>
                </div>
                
                <!-- Full Week Schedule Dropdown -->
                <div class="border-t border-gray-600 pt-3">
                    <button id="hours-toggle" class="w-full text-left text-sm text-gray-300 hover:text-accent transition-colors duration-300 flex items-center justify-between">
                        <span>View Full Week Schedule</span>
                        <svg id="hours-arrow" class="w-4 h-4 transform transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                        </svg>
                    </button>
                    
                    <div id="full-hours" class="hidden mt-3 space-y-1 text-sm text-gray-300">
                        <div class="flex justify-between">
                            <span>Monday:</span>
                            <span class="text-red-400">Closed</span>
                        </div>
                        <div class="flex justify-between">
                            <span>Tuesday:</span>
                            <span>11:00 AM - 8:00 PM</span>
                        </div>
                        <div class="flex justify-between">
                            <span>Wednesday:</span>
                            <span>11:00 AM - 8:00 PM</span>
                        </div>
                        <div class="flex justify-between">
                            <span>Thursday:</span>
                            <span>11:00 AM - 8:00 PM</span>
                        </div>
                        <div class="flex justify-between">
                            <span>Friday:</span>
                            <span>11:00 AM - 9:00 PM</span>
                        </div>
                        <div class="flex justify-between">
                            <span>Saturday:</span>
                            <span>11:00 AM - 9:00 PM</span>
                        </div>
                        <div class="flex justify-between">
                            <span>Sunday:</span>
                            <span>11:00 AM - 8:00 PM</span>
                        </div>
                    </div>
                </div>
            </div>
            <div>
                <h4 class="text-lg font-semibold mb-4">Contact</h4>
                <p class="text-gray-300">4441 West Metairie Ave</p>
                <p class="text-gray-300">Metairie, LA</p>
                <p class="text-gray-300">(504) 463-5384</p>
                <p class="text-gray-300">kennedyda24@att.net</p>
            </div>
        </div>
        <div class="border-t border-gray-700 mt-8 pt-8">
            <p class="text-gray-400">Â© 2024 That's Amore Pizzeria. All rights reserved.</p>
        </div>
    </div>
</footer>

<script>
// Business Hours Logic
document.addEventListener('DOMContentLoaded', function() {
    const todayHoursElement = document.getElementById('today-hours');
    const hoursToggle = document.getElementById('hours-toggle');
    const fullHours = document.getElementById('full-hours');
    const hoursArrow = document.getElementById('hours-arrow');
    
    // Fetch hours from backend
    fetch('/api/hours')
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                updateFooterHours(data.data, todayHoursElement, fullHours);
            } else {
                console.error('Failed to fetch hours:', data.message);
                // Fallback to default hours
                updateFooterHoursWithDefaults(todayHoursElement, fullHours);
            }
        })
        .catch(error => {
            console.error('Error fetching hours:', error);
            // Fallback to default hours
            updateFooterHoursWithDefaults(todayHoursElement, fullHours);
        });
    
    function updateFooterHours(hoursData, todayHoursElement, fullHours) {
        const businessHours = hoursData.businessHours || {};
        const holidayHours = hoursData.holidayHours || [];
        
        // Get current date and check for holidays
        const today = new Date();
        const todayDay = today.getDay();
        const holidayInfo = getHolidayHours(today, holidayHours);
        
        let displayHours, isOpen, statusText;
        
        if (holidayInfo) {
            // Holiday hours
            displayHours = `${holidayInfo.holidayName}: ${holidayInfo.hours}`;
            isOpen = holidayInfo.open;
            statusText = holidayInfo.open ? 'We\'re open today!' : 'We\'re closed today';
        } else {
            // Regular business hours
            const todayInfo = businessHours[todayDay] || { day: 'Unknown', hours: 'Closed', open: false };
            displayHours = `${todayInfo.day}: ${todayInfo.hours}`;
            isOpen = todayInfo.open;
            statusText = todayInfo.open ? 'We\'re open today!' : 'We\'re closed today';
        }
        
        // Display today's hours
        if (isOpen) {
            todayHoursElement.innerHTML = `
                <div class="text-green-400">${displayHours}</div>
                <div class="text-xs text-gray-300 mt-1">${statusText}</div>
            `;
        } else {
            todayHoursElement.innerHTML = `
                <div class="text-red-400">${displayHours}</div>
                <div class="text-xs text-gray-300 mt-1">${statusText}</div>
            `;
        }
        
        // Update full week schedule
        updateFullWeekSchedule(businessHours, fullHours);
    }
    
    function updateFooterHoursWithDefaults(todayHoursElement, fullHours) {
        // Fallback to default hours if backend is unavailable
        const businessHours = {
            0: { day: 'Sunday', hours: '11:00 AM - 8:00 PM', open: true },
            1: { day: 'Monday', hours: 'Closed', open: false },
            2: { day: 'Tuesday', hours: '11:00 AM - 8:00 PM', open: true },
            3: { day: 'Wednesday', hours: '11:00 AM - 8:00 PM', open: true },
            4: { day: 'Thursday', hours: '11:00 AM - 8:00 PM', open: true },
            5: { day: 'Friday', hours: '11:00 AM - 9:00 PM', open: true },
            6: { day: 'Saturday', hours: '11:00 AM - 9:00 PM', open: true }
        };
        
        const today = new Date();
        const todayDay = today.getDay();
        const todayInfo = businessHours[todayDay];
        
        if (todayInfo.open) {
            todayHoursElement.innerHTML = `
                <div class="text-green-400">${todayInfo.day}: ${todayInfo.hours}</div>
                <div class="text-xs text-gray-300 mt-1">We're open today!</div>
            `;
        } else {
            todayHoursElement.innerHTML = `
                <div class="text-red-400">${todayInfo.day}: ${todayInfo.hours}</div>
                <div class="text-xs text-gray-300 mt-1">We're closed today</div>
            `;
        }
        
        updateFullWeekSchedule(businessHours, fullHours);
    }
    
    function updateFullWeekSchedule(businessHours, fullHours) {
        const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
        fullHours.innerHTML = '';
        
        days.forEach((day, index) => {
            const dayIndex = (index + 1) % 7; // Convert to 0-6 index (Sunday = 0)
            const dayData = businessHours[dayIndex] || { day, hours: 'Closed', open: false };
            const dayDiv = document.createElement('div');
            dayDiv.className = 'flex justify-between';
            dayDiv.innerHTML = `
                <span>${day}:</span>
                <span class="${dayData.open ? 'text-white' : 'text-red-400'}">${dayData.hours}</span>
            `;
            fullHours.appendChild(dayDiv);
        });
    }
    
    // Holiday exceptions
    function getHolidayHours(date, holidayHours) {
        const month = date.getMonth() + 1; // getMonth() returns 0-11
        const day = date.getDate();
        
        // Check for configured holidays
        for (const holiday of holidayHours) {
            if (holiday.month === month && holiday.day === day) {
                return { 
                    hours: holiday.hours, 
                    open: holiday.open, 
                    isHoliday: true, 
                    holidayName: holiday.name 
                };
            }
        }
        
        // Check for calculated holidays (Easter, Thanksgiving)
        for (const holiday of holidayHours) {
            if (holiday.isCalculated) {
                let calculatedDate;
                if (holiday.name === 'Easter') {
                    calculatedDate = getEasterDate(date.getFullYear());
                } else if (holiday.name === 'Thanksgiving') {
                    calculatedDate = getThanksgivingDate(date.getFullYear());
                }
                
                if (calculatedDate && month === calculatedDate.getMonth() + 1 && day === calculatedDate.getDate()) {
                    return { 
                        hours: holiday.hours, 
                        open: holiday.open, 
                        isHoliday: true, 
                        holidayName: holiday.name 
                    };
                }
            }
        }
        
        return null; // No holiday
    }
    
    // Calculate Easter date (Meeus/Jones/Butcher algorithm)
    function getEasterDate(year) {
        const a = year % 19;
        const b = Math.floor(year / 100);
        const c = year % 100;
        const d = Math.floor(b / 4);
        const e = b % 4;
        const f = Math.floor((b + 8) / 25);
        const g = Math.floor((b - f + 1) / 3);
        const h = (19 * a + b - d - g + 15) % 30;
        const i = Math.floor(c / 4);
        const k = c % 4;
        const l = (32 + 2 * e + 2 * i - h - k) % 7;
        const m = Math.floor((a + 11 * h + 22 * l) / 451);
        const month = Math.floor((h + l - 7 * m + 114) / 31);
        const day = ((h + l - 7 * m + 114) % 31) + 1;
        
        return new Date(year, month - 1, day);
    }
    
    // Calculate Thanksgiving date (4th Thursday in November)
    function getThanksgivingDate(year) {
        const firstDay = new Date(year, 10, 1); // November 1st
        const firstThursday = new Date(year, 10, 1 + ((4 - firstDay.getDay()) + 7) % 7);
        const thanksgiving = new Date(year, 10, firstThursday.getDate() + 21); // 3 weeks later
        return thanksgiving;
    }
    
    // Toggle full hours dropdown
    hoursToggle.addEventListener('click', function() {
        const isHidden = fullHours.classList.contains('hidden');
        
        if (isHidden) {
            // Show hours
            fullHours.classList.remove('hidden');
            hoursArrow.classList.add('rotate-180');
        } else {
            // Hide hours
            fullHours.classList.add('hidden');
            hoursArrow.classList.remove('rotate-180');
        }
    });
});
</script>
